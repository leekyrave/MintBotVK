<?php
require 'db.php';
require 'webapi.php';
require 'logApi.php';
require 'forumapi.php';
require_once('simplevk-master/autoload.php');

use DigitalStar\vk_api\VK_api as vk_api; // –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å

const VK_KEY = "-";
const ACCESS_KEY = "-";
const VERSION = "5.126";


$vk = vk_api::create(VK_KEY, VERSION)->setConfirm(ACCESS_KEY);
$vk->initVars($peer_id, $message, $payload, $id, $type, $data);


// ---------- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ----------

$chat_id = $peer_id - 2000000000;
$superuser = 482917726;
$logwarns = 2000000053;
$date = date("d.m.Y H:i");


// ---------- –°–æ–æ–±—â–µ–Ω–∏–µ ----------
$messages = explode(" ", $message);

$messagecmd = mb_strtolower($message);
$log = 2000000021;
$group_id = -190892131;
$is_admin = 482917726;
// ---------- –î—Ä—É–≥–æ–µ ----------

$chat_act = $data->object->action;
if (!R::testConnection()) {
  $vk->sendMessage($is_admin, "–ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.–ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª db.php.");
  exit;
}



$arizona_max = 25;
$rodina_max = 4;

$serversname = array(
    'Phoenix',
    'Tucson',
    'Scottdale',
    'Chandler',
    'Brainburg',
    'Saintrose',
    'Mesa',
    'Red-Rock',
    'Yuma',
    'Surprise',
    'Prescott',
    'Glendale',
    'Kingman',
    'Winslow',
    'Payson', 
    'Gilbert',
    'Show-Low',
    'Casa-Grande',
    'Page',
    'Sun-City',
    'Queen-Creek',
    'Sedona',
    'Mobile-1',
    'Mobile-2',
    'Mobile-3',
  );

  $serversnamerodina = array(
    '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –û–∫—Ä—É–≥',
    '–Æ–∂–Ω—ã–π –û–∫—Ä—É–≥',
    '–°–µ–≤–µ—Ä–Ω—ã–π –û–∫—Ä—É–≥',
    '–í–æ—Å—Ç–æ—á–Ω—ã–π –û–∫—Ä—É–≥'
  );

$stickers = array('ü¶Ö', '‚öîÔ∏è', '‚ò†Ô∏è', '‚öôÔ∏è', 'ü¶Å', 'üåπ', 'üåµ', 'üßó‚Äç‚ôÇÔ∏è', 'üî´', 'üéÅ', 'üõ°Ô∏è', 'ü¶ú', 'üëë', 'üå∫', 'üêâ', 'üéñÔ∏è', 'üïä', 'üêª', 'üìÑ', '‚òÄÔ∏è', 'üëë' , 'üèôÔ∏è', 'üì±', 'üéÆ', '‚òé');

$org_names_arizona = array('–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞','–ü–æ–ª–∏—Ü–∏—è –õ–°', '–†–ö–®–î', '–§–ë–†', '–ü–æ–ª–∏—Ü–∏—è –°–§', '–ë–æ–ª—å–Ω–∏—Ü–∞ –õ–°', '–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ', "–¢–°–†", "–ë–æ–ª—å–Ω–∏—Ü–∞ –°–§", "–õ–∏—Ü–µ–Ω–∑–µ—Ä—ã", "–†–∞–¥–∏–æ –õ–°", "Grove", "Vagos", "Ballas", "Aztecas", "Rifa", "–†—É—Å—Å–∫–∞—è –º–∞—Ñ–∏—è", "–Ø–∫—É–¥–∑–∞", "–õ–ö–ù", "–í–∞—Ä–ª–æ–∫–∏","–ê—Ä–º–∏—è –õ–°", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫", "–ë–æ–ª—å–Ω–∏—Ü–∞ –õ–í", "–ü–æ–ª–∏—Ü–∏—è –õ–í", "–†–∞–¥–∏–æ –õ–í", "–ù–æ—á–Ω—ã–µ –í–æ–ª–∫–∏", "–†–∞–¥–∏–æ –°–§", "–ê—Ä–º–∏—è –°–§", "–¢—ë–º–Ω–æ–µ –ë—Ä–∞—Ç—Å—Ç–≤–æ","–°—Ç—Ä–∞—Ö–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è");
$org_names_rodina = array("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞","–ü–æ–ª–∏—Ü–∏—è –ê—Ä–∑–∞–º–∞—Å–∞", "–ü–æ–ª–∏—Ü–∏—è –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–ë–æ–ª—å–Ω–∏—Ü–∞ –ê—Ä–∑–∞–º–∞—Å–∞", "–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "–ê–≤—Ç–æ—à–∫–æ–ª–∞", "–†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–§–∞–Ω—Ç–æ–º–∞—Å—ã", "–ë–æ–ª—å–Ω–∏—Ü–∞ –≠–¥–æ–≤–æ", "–ß–µ—Ä–Ω–∞—è –ö–æ—à–∫–∞", "–°–∞–Ω–∏—Ç–∞—Ä—ã", "–ë—Ä–∞—Ç–≤–∞", "–†—É—Å—Å–∫–∞—è –ú–∞—Ñ–∏—è", "–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –ú–∞—Ñ–∏—è", "–ö–∞–≤–∫–∞–∑—Å–∫–∞—è –ú–∞—Ñ–∏—è", "–§–°–ë", "–ê—Ä–º–∏—è", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫", "–¢—é—Ä—å–º–∞ –°—Ç—Ä–æ–≥–æ–≥–æ –†–µ–∂–∏–º–∞", "–ë–æ–ª—å–Ω–∏—Ü–∞ –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–ü–æ–ª–∏—Ü–∏—è –≠–¥–æ–≤–æ", "–†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –ê—Ä–∑–∞–º–∞—Å");


$headers_arizona = array(
  "üëÆ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –õ–°–ü–î",
  "üö® –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–ö–®–î",
  "üïµÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –§–ë–†",
  "üöì –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –°–§–ü–î",
  "üè• –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –õ–æ—Å-–°–∞–Ω—Ç–æ—Å–∞",
  "üá∫üá∏ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
  "üîí –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¢—é—Ä—å–º—ã –°—Ç—Ä–æ–≥–æ –†–µ–∂–∏–º–∞",
  "‚öïÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –°–∞–Ω-–§–∏–µ—Ä—Ä–æ",
  "üöó –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê–≤—Ç–æ—à–∫–æ–ª—ã",
  "üì∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –õ–°",
  "üíö –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ì—Ä—É–≤–æ–≤",
  "üíõ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –í–∞–≥–æ—Å–æ–≤",
  "üíú –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–∞–ª–ª–∞—Å–æ–≤",
  "ü§ç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê—Ü—Ç–µ–∫–æ–≤",
  "üíô –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∏—Ñ—ã",
  "üç∑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†—É—Å—Å–∫–æ–π –ú–∞—Ñ–∏–∏",
  "üëπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ø–∫—É–¥–∑—ã",
  "üó°Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –õ–ö–ù",
  "üèçÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –í–∞—Ä–ª–æ–∫–æ–≤",
  "üéñÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê—Ä–º–∏–∏ –õ–°",
  "üè¶ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞",
  "üíä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –õ–∞—Å-–í–µ–Ω—Ç—É—Ä–∞—Å–∞",
  "üöî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –õ–í–ü–î",
  "üìπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –õ–í",
  "üñ§ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ù–æ—á–Ω—ã—Ö –í–æ–ª–∫–æ–≤",
  "üé§ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –°–§",
  "üéñÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê—Ä–º–∏–∏ –°–§",
  "üëπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¢–µ–º–Ω–æ–≥–æ –ë—Ä–∞—Ç—Å—Ç–≤–∞",
  "üîß –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –°—Ç—Ä–∞—Ö–æ–≤–æ–π –ö–æ–º–ø–∞–Ω–∏–∏"
);

$headers_rodina = array(
  "üëÆ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü–æ–ª–∏—Ü–∏–∏ –ê—Ä–∑–∞–º–∞—Å–∞",
  "üöì –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü–æ–ª–∏—Ü–∏–∏ –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ",
  "üè• –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –ê—Ä–∑–∞–º–∞—Å–∞",
  "üá∑üá∫ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
  "üöó –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê–≤—Ç–æ—à–∫–æ–ª—ã",
  "üé§ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ",
  "üñ§ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –§–∞–Ω—Ç–æ–º–∞—Å–æ–≤",
  "üíä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –≠–¥–æ–≤–æ",
  "üíú –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ß–µ—Ä–Ω–æ–π –ö–æ—à–∫–∏",
  "ü§ç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –°–∞–Ω–∏—Ç–∞—Ä–æ–≤",
  "üíõ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë—Ä–∞—Ç–≤—ã",
  "üç∑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†—É—Å—Å–∫–æ–π –ú–∞—Ñ–∏–∏",
  "üêñ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –£–∫—Ä–∞–∏–Ω—Å–∫–æ–π –ú–∞—Ñ–∏–∏",
  "üî™ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ö–∞–≤–∫–∞–∑—Å–∫–æ–π –ú–∞—Ñ–∏–∏",
  "üïµÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –§–°–ë",
  "üéñÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ê—Ä–º–∏–∏",
  "üè¶ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞",
  "üîí –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¢—é—Ä—å–º—ã –°—Ç—Ä–æ–≥–æ–≥–æ –†–µ–∂–∏–º–∞",
  "‚öïÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ë–æ–ª—å–Ω–∏—Ü—ã –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ",
  "üö® –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü–æ–ª–∏—Ü–∏–∏ –≠–¥–æ–≤–æ",
  "üì∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –ê—Ä–∑–∞–º–∞—Å"
);




if ($data->type == 'message_new') {


    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    $btn_leaders = $vk->buttonText('üá∫üá∏ –õ–∏–¥–µ—Ä—ã', 'white', ['command' => 'leaders']);
    $btn_monitoring = $vk->buttonText('üñ•Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', 'white', ['command' => 'p_select']);
    $btn_settings = $vk->buttonText('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'blue', ['command' => 'settings']);
    $btn_help = $vk->buttonText('¬†‚ùì –ü–æ–º–æ—â—å¬†', 'green', ['command' => 'help']);
    $btn_stats = $vk->buttonText('&#4448;&#4448;&#4448;üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞&#4448;&#4448;&#4448;¬†', 'white', ['command' => 'my_stats']);
    
    $btn_clear_status = $vk->buttonText('¬†¬†¬†¬†¬†¬†üßπ –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => 'clear_status']);
    $btn_clear_nick = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üìõ –£–¥–∞–ª–∏—Ç—å –Ω–∏–∫¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => 'clear_nick']);
    $btn_set_status = $vk->buttonText('¬†¬†¬†¬†¬†üßπ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å¬†¬†¬†¬†¬†', 'green', ['command' => 'set_status']);
    $btn_set_nick = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üìõ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫¬†¬†¬†¬†¬†¬†¬†¬†', 'green', ['command' => 'set_nick']);

    $btns_profile = [[$btn_set_nick,$btn_clear_nick],[$btn_set_status,$btn_clear_status]];
    $btns_menu = [[$btn_leaders, $btn_monitoring], [$btn_stats], [$btn_settings, $btn_help]];
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    regUser($id);
    //payloads
    if (isset($data->object->payload)) {
        $payload = json_decode($data->object->payload, True);
      } else {
        $payload = null;
      }
    $payload = $payload['command'];

    if ($payload == 'help') {
      help();
    }




    if($payload == 'my_stats') {
      showStats($id);
    }

    if ($payload == 'leaders') {
        if(isPermission($id,1)) {
          $arz = $vk->buttonText('üåµ –ê—Ä–∏–∑–æ–Ω–∞ –†–ü', 'red', ['command' => 'leaders:0']);
          $rodina = $vk->buttonText('¬†üá∑üá∫ –†–æ–¥–∏–Ω–∞ –†–ü¬†', 'blue', ['command' => 'leaders:1']);
          $buttons = [[$arz],[$rodina]];
          $vk->sendButton($peer_id, "üìå –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞", $buttons, true);
        }
        
    }

    if($payload == 'settings') {
      if(isPermission($id,1,$vk,$peer_id))
      $vk->sendButton($peer_id, "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", $btns_profile, true);
    }

    if($payload == 'clear_status') {
      $user = R::findone('users','user_id = ?', [$id]);
      if($user) {
        $user->status = "";
        R::store($user);
        $vk->SendMessage($peer_id,"‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.");
      }
      exit;
    }

    if($payload == 'clear_nick') {
      $user = R::findone('users','user_id = ?', [$id]);
      if($user) {
        $user->nick = "";
        R::store($user);
        $vk->SendMessage($peer_id,"‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Å–≤–æ–π –Ω–∏–∫.");
      }
      exit;
    }


    
    if($payload == 'set_nick') {
      if(isPermission($id,1,$vk,$peer_id))
      {
        $b = R::findone('buffer','user_id = ?',[$id]);
        if(!$b) {
        $b = R::dispense('buffer');
        $b->user_id = $id;
        $b->snbuffer = $id;
        R::store($b);
        $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id,$vk).'], –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫,–∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å',['disable_mentions' => 1, 'dont_parse_links' => 1]);
      } else {
        $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
      }
    }
    exit;
    }
  
  
    if($payload == 'set_status') {
      if(isPermission($id,1,$vk,$peer_id))
      {
        $b = R::findone('buffer','user_id = ?',[$id]);
        if(!$b) {
          $b = R::dispense('buffer');
          $b->user_id = $id;
          $b->sstbuffer = $id;
          R::store($b);
          $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id,$vk).'], –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å,–∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.',['disable_mentions' => 1, 'dont_parse_links' => 1]);
        } else {
          $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
      }
    }
    exit;
    }

    if (preg_match_all('/leaders:(\d+)$/',$payload,$foo)) {
      if(isPermission($id,1)) {
        if($foo[1][0] == 0) {
          $b = R::findone('buffer','user_id = ?',[$id]);
          if(!$b) {
          $b = R::dispense('buffer');
          $b->user_id = $id;
          $b->leadbuffer = $id;
          R::store($b);
            $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id).'], –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –ê—Ä–∏–∑–æ–Ω—ã,—Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å.',['disable_mentions' => 1, 'dont_parse_links' => 1]);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
          }
        } elseif($foo[1][0] == 1)
        {
          $b = R::findone('buffer','user_id = ?',[$id]);
          if(!$b) {
          $b = R::dispense('buffer');
          $b->user_id = $id;
          $b->leadrodinabuffer = $id;
          R::store($b);
            $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id).'], –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –†–æ–¥–∏–Ω—ã, —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å.',['disable_mentions' => 1, 'dont_parse_links' => 1]);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
          }
        }
      }
      exit;
    }

    //monitoring
    if ($payload == 'p_select') {
        if(isPermission($id,1)) {
          $arz = $vk->buttonText('üåµ –ê—Ä–∏–∑–æ–Ω–∞ –†–ü', 'red', ['command' => 'p:0']);
          $rodina = $vk->buttonText('¬†üá∑üá∫ –†–æ–¥–∏–Ω–∞ –†–ü¬†', 'blue', ['command' => 'p:1']);
          $buttons = [[$arz],[$rodina]];
          $vk->sendButton($peer_id, "üìå –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞", $buttons, true);
        }
    }

    if (preg_match_all('/p:(\d+)$/',$payload,$foo)) {
        if(isPermission($id,1)) {
          if($foo[1][0] == 0) {
            $b = R::findone('buffer','user_id = ?',[$id]);
            if(!$b) {
            $b = R::dispense('buffer');
            $b->user_id = $id;
            $b->mbuffer = $id;
            R::store($b);
              $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id).'], –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –ê—Ä–∏–∑–æ–Ω—ã,–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å.',['disable_mentions' => 1, 'dont_parse_links' => 1]);
            } else {
              $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
            }
          } elseif($foo[1][0] == 1)
          {
            $b = R::findone('buffer','user_id = ?',[$id]);
            if(!$b) {
            $b = R::dispense('buffer');
            $b->user_id = $id;
            $b->mrodinabuffer = $id;
            R::store($b);
              $vk->SendMessage($peer_id,'‚è±Ô∏è [id'.$id.'|'. getNick($id).'], –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –†–æ–¥–∏–Ω—ã,–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å.',['disable_mentions' => 1, 'dont_parse_links' => 1]);
            } else {
              $vk->SendMessage($peer_id,"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É,–ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.");
            }
          }
        }
        exit;
      }


      if (preg_match_all('/p:(\d+) s:(\d+) a:(\d+)$/',$payload,$foo)) {
          if(isPermission($id,1))
          {
              if($foo[1][0] == 0)
              {
                  switch ($foo[3][0]) {
                      case 0: 
                          $btn_gov = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üá∫üá∏ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:0']);
                          $btn_justice = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üöì –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –Æ—Å—Ç–∏—Ü–∏–∏¬†¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:1']);
                          $btn_defence = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üéñÔ∏è –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã¬†¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:2']);
                          $btn_mc = $vk->buttonText('üè• –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è¬†', 'blue', ['command' => $foo[0][0] . ' c:3']);
                          $btn_media = $vk->buttonText('üì∞ –°—Ä–µ–¥—Å—Ç–≤–∞ –ú–∞—Å—Å–æ–≤–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', 'blue', ['command' => $foo[0][0] . ' c:4']);
                          $buttons = [[$btn_gov],[$btn_justice],[$btn_defence],[$btn_mc],[$btn_media]];
                          $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–æ—Å.—Å—Ç—Ä—É–∫—Ç—É—Ä | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                          break;
                    
                      case 1:
                          $btn_yakuza = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üëπ Yakuza¬†¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' c:0 o:17']);
                          $btn_lcn = $vk->buttonText('üó°Ô∏è La Cosa Nostra', 'white', ['command' => $foo[0][0] . ' c:0 o:18']);
                          $btn_rm = $vk->buttonText('¬†üç∑ Russian Mafia¬†', 'blue', ['command' => $foo[0][0] . ' c:0 o:16']);
                          $btn_wmc = $vk->buttonText('¬†¬†¬†üèçÔ∏è Warlock MC¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' c:0 o:19']);
                          $btn_all = $vk->buttonText('üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫', 'white', ['command' => $foo[0][0] . ' c:0 o:0 a:'.json_encode(array(17,18,16,19))]);
                          $buttons = [[$btn_yakuza],[$btn_lcn],[$btn_rm],[$btn_wmc],[$btn_all]];
                          $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ü—Ä–µ—Å—Ç—É–ø–Ω—ã—Ö –°–∏–Ω–¥–∏–∫–∞—Ç–æ–≤ | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                          break;

                      case 2:
                          $btn_grove = $vk->buttonText('¬†¬†üíö Grove¬†¬†', 'green', ['command' => $foo[0][0] . ' c:0 o:11']);
                          $btn_ballas = $vk->buttonText('üíú Ballas', 'white', ['command' => $foo[0][0] . ' c:0 o:13']);
                          $btn_vagos = $vk->buttonText('¬†¬†üíõ Vagos¬†', 'green', ['command' => $foo[0][0] . ' c:0 o:12']);
                          $btn_aztecas = $vk->buttonText('ü§ç Aztecas', 'green', ['command' => $foo[0][0] . ' c:0 o:14']);
                          $btn_rifa = $vk->buttonText('¬†¬†üíô Rifa¬†¬†', 'white', ['command' => $foo[0][0] . ' c:0 o:15']);
                          $btn_nw = $vk->buttonText('¬†¬†üñ§ NW¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' c:0 o:25']);
                          $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' c:0 o:0 a:'.json_encode(array(11,13,12,14,15,25))]);
                          $buttons = [[$btn_grove,$btn_ballas],[$btn_aztecas,$btn_rifa],[$btn_vagos,$btn_nw],[$btn_all]];
                          $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –£–ª–∏—á–Ω—ã—Ö –ì—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫ | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                          break;
                      default:
                          $vk->SendMessage($peer_id,'ü§î –û–π-–æ–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —Ç–∞–∫–æ–π —Å—Ñ–µ—Ä—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
                          break;
                }
            } elseif ($foo[1][0] == 1)
            {
              switch ($foo[3][0]) {
                case 0:
                    $btn_gov = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üá∑üá∫ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:0']);
                    $btn_justice = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üöì –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –Æ—Å—Ç–∏—Ü–∏–∏¬†¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:1']);
                    $btn_defence = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üéñÔ∏è –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã¬†¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' c:2']);
                    $btn_mc = $vk->buttonText('üè• –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', 'blue', ['command' => $foo[0][0] . ' c:3']);
                    $btn_media = $vk->buttonText('üì∞ –°—Ä–µ–¥—Å—Ç–≤–∞ –ú–∞—Å—Å–æ–≤–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', 'blue', ['command' => $foo[0][0] . ' c:4']);
                    $buttons = [[$btn_gov],[$btn_justice],[$btn_defence],[$btn_mc],[$btn_media]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–æ—Å.—Å—Ç—Ä—É–∫—Ç—É—Ä | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;
                  
                case 1:
                    $btn_rm = $vk->buttonText('¬†¬†¬†üç∑ –†—É—Å—Å–∫–∞—è –ú–∞—Ñ–∏—è¬†¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' c:0 o:12']);
                    $btn_ua = $vk->buttonText('üêñ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –ú–∞—Ñ–∏—è', 'white', ['command' => $foo[0][0] . ' c:0 o:13']);
                    $btn_kz = $vk->buttonText('üî™ –ö–∞–≤–∫–∞–∑—Å–∫–∞—è –ú–∞—Ñ–∏—è', 'blue', ['command' => $foo[0][0] . ' c:0 o:14']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0] . 'c:0 o:0 a:'.json_encode(array(12,13,14))]);
                    $buttons = [[$btn_rm],[$btn_ua],[$btn_kz],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–∞—Ñ–∏–π | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;

                case 2:
                    $btn_sanitar = $vk->buttonText('ü§ç –°–∞–Ω–∏—Ç–∞—Ä—ã', 'white', ['command' => $foo[0][0] . ' c:0 o:10']);
                    $btn_cat = $vk->buttonText('¬†¬†¬†¬†¬†üíú –ö–æ—à–∫–∞¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' c:0 o:9']);
                    $btn_brotherhood = $vk->buttonText('¬†¬†¬†üíõ –ë—Ä–∞—Ç–≤–∞¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' c:0 o:11']);
                    $btn_fantom = $vk->buttonText('üñ§ –§–∞–Ω—Ç–æ–º–∞—Å—ã', 'green', ['command' => $foo[0][0] . ' c:0 o:7']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†„ÄÄ„ÄÄüòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫„ÄÄ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' c:0 o:0 a:'.json_encode(array(10,9,11,7))]);
                    $buttons = [[$btn_sanitar,$btn_cat],[$btn_brotherhood,$btn_fantom],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –û–ü–ì | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;

                default:
                    $vk->SendMessage($peer_id,'ü§î –û–π-–æ–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —Ç–∞–∫–æ–π —Å—Ñ–µ—Ä—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
                    break;
              }

            }
        }
      } elseif(preg_match_all('/p:(\d+) s:(\d+) a:(\d+) c:(\d+)$/',$payload,$foo))
      {
          if(isPermission($id,1))
          {
            if($foo[1][0] == 0)
            {
                switch ($foo[4][0]) {
                    case 0:
                        $btn_gov = $vk->buttonText('¬†¬†¬†¬†¬†üá∫üá∏ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:6']);
                        $btn_bank = $vk->buttonText('¬†¬†üè¶ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫¬†¬†', 'green', ['command' => $foo[0][0] . ' o:21']);
                        $btn_license = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üöó –ê–≤—Ç–æ—à–∫–æ–ª–∞¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => $foo[0][0] . ' o:9']);
                        $btn_insurance = $vk->buttonText('üîß –°—Ç—Ä–∞—Ö–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è', 'blue', ['command' => $foo[0][0] . ' o:29']);
                        $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(6,21,9,29))]);
                        $buttons = [[$btn_gov],[$btn_bank],[$btn_license],[$btn_insurance],[$btn_all]];
                        $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ê–ø–ø–∞—Ä–∞—Ç–∞ | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                        break;
                    
                    case 1:
                        $btn_lspd = $vk->buttonText('üëÆ –õ–°–ü–î¬†', 'blue', ['command' => $foo[0][0] . ' o:1']);
                        $btn_sfpd = $vk->buttonText('üöì –°–§–ü–î', 'blue', ['command' => $foo[0][0] . ' o:4']);
                        $btn_rcsd = $vk->buttonText('üö® –†–ö–®–î', 'blue', ['command' => $foo[0][0] . ' o:2']);
                        $btn_lvpd = $vk->buttonText('üöî –õ–í–ü–î', 'blue', ['command' => $foo[0][0] . ' o:23']);
                        $btn_fbi = $vk->buttonText('„ÄÄ¬†¬†„ÄÄ„ÄÄ¬†¬†üïµÔ∏è –§–ë–†¬†¬†„ÄÄ„ÄÄ„ÄÄ¬†¬†', 'blue', ['command' => $foo[0][0] . ' o:3']);
                        $btn_all = $vk->buttonText('„ÄÄ¬†¬†üòä –û–±—â–∏–π –°–ø–∏—Å–æ–∫¬†¬†¬†„ÄÄ','white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(1,4,2,23,3))]);
                        $buttons = [[$btn_lspd,$btn_sfpd],[$btn_rcsd,$btn_lvpd],[$btn_fbi],[$btn_all]];
                        $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –Æ—Å—Ç–∏—Ü–∏–∏ | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                        break;

                    case 2:
                        $btn_lsa = $vk->buttonText('¬†¬†¬†¬†üéñÔ∏è –ê—Ä–º–∏—è –õ–æ—Å-–°–∞–Ω—Ç–æ—Å–∞¬†¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:20']);
                        $btn_sfa = $vk->buttonText('¬†¬†¬†¬†üéñÔ∏è –ê—Ä–º–∏—è –°–∞–Ω-–§–∏–µ—Ä—Ä–æ¬†¬†¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:27']);
                        $btn_msp = $vk->buttonText('üîí –¢—é—Ä—å–º–∞ –°—Ç—Ä–æ–≥–æ –†–µ–∂–∏–º–∞', 'green', ['command' => $foo[0][0] . ' o:7']);
                        $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(20,27,7))]);
                        $buttons = [[$btn_lsa],[$btn_sfa],[$btn_msp],[$btn_all]];
                        $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –û–±–æ—Ä–æ–Ω—ã | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                        break;

                    case 3:
                        $btn_lsmc = $vk->buttonText('¬†¬†üè• –ë–æ–ª—å–Ω–∏—Ü–∞ –õ–æ—Å-–°–∞–Ω—Ç–æ—Å–∞¬†¬†', 'green', ['command' => $foo[0][0] . ' o:5']);
                        $btn_sfmc = $vk->buttonText('¬†¬†¬†‚öïÔ∏è –ë–æ–ª—å–Ω–∏—Ü–∞ –°–∞–Ω-–§–∏–µ—Ä—Ä–æ¬†¬†', 'green', ['command' => $foo[0][0] . ' o:8']);
                        $btn_lvmc = $vk->buttonText('üíä –ë–æ–ª—å–Ω–∏—Ü–∞ –õ–∞—Å-–í–µ–Ω—Ç—É—Ä–∞—Å–∞', 'green', ['command' => $foo[0][0] . ' o:22']);
                        $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(5,8,22))]);
                        $buttons = [[$btn_lsmc],[$btn_sfmc],[$btn_lvmc],[$btn_all]];
                        $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è | ". $serversname[$foo[2][0] - 1] . " " . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                        break;

                    case 4:
                        $btn_rls = $vk->buttonText('¬†¬†üì∞ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –õ–æ—Å-–°–∞–Ω—Ç–æ—Å–∞¬†¬†', 'green', ['command' => $foo[0][0] . ' o:10']);
                        $btn_rsf = $vk->buttonText('¬†¬†üé§ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –°–∞–Ω-–§–∏–µ—Ä—Ä–æ¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:26']);
                        $btn_rlv = $vk->buttonText('üìπ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –õ–∞—Å-–í–µ–Ω—Ç—É—Ä–∞—Å–∞', 'green', ['command' => $foo[0][0] . ' o:24']);
                        $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†„ÄÄüòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫„ÄÄ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(10,26,24))]);
                        $buttons = [[$btn_rls],[$btn_rsf],[$btn_rlv],[$btn_all]];
                        $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –°—Ä–µ–¥—Å—Ç–≤ –ú–∞—Å—Å–æ–≤–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ | ". $serversname[$foo[2][0] - 1] . ' ' . $stickers[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                        break;
                    default:
                        $vk->SendMessage($peer_id,'ü§î –û–π-–æ–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —Ç–∞–∫–æ–≥–æ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
                        break;
                }
            } elseif ($foo[1][0] == 1)
            {
              switch ($foo[4][0]) {
                case 0:
                    $btn_gov = $vk->buttonText('¬†¬†¬†¬†¬†üá∑üá∫ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ¬†¬†¬†¬†¬†¬†', 'blue', ['command' => $foo[0][0] . ' o:4']);
                    $btn_bank = $vk->buttonText('¬†¬†üè¶ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫¬†¬†', 'green', ['command' => $foo[0][0] . ' o:17']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(4,17))]);
                    $buttons = [[$btn_gov],[$btn_bank],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ê–ø–ø–∞—Ä–∞—Ç–∞ | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;

                case 1:
                    $btn_arz = $vk->buttonText('üëÆ –ü–ê–†–ó', 'blue', ['command' => $foo[0][0] . ' o:1']);
                    $btn_lit = $vk->buttonText('üöì –ü–õ–´–¢', 'blue', ['command' => $foo[0][0] . ' o:2']);
                    $btn_ed =  $vk->buttonText('üö® –ü–≠–î–û', 'blue', ['command' => $foo[0][0] . ' o:20']);
                    $btn_fsb = $vk->buttonText('¬†üïµÔ∏è –§–°–ë¬†', 'blue', ['command' => $foo[0][0] . ' o:15']);
                    $btn_all = $vk->buttonText('„ÄÄ¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†„ÄÄ', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(1,2,20,15))]);
                    $buttons = [[$btn_arz,$btn_lit],[$btn_ed,$btn_fsb],[$btn_all]];

                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –Æ—Å—Ç–∏—Ü–∏–∏ | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;
                
                case 2:
                    $btn_army = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üéñÔ∏è –ê—Ä–º–∏—è –æ–∫—Ä—É–≥–∞¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:16']);
                    $btn_msp = $vk->buttonText('üîí –¢—é—Ä—å–º–∞ –°—Ç—Ä–æ–≥–æ –†–µ–∂–∏–º–∞', 'green', ['command' => $foo[0][0] . ' o:18']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(16,18))]);
                    $buttons = [[$btn_army],[$btn_msp],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –û–±–æ—Ä–æ–Ω—ã | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;

                case 3:
                    $btn_arz = $vk->buttonText('¬†üè• –ë–æ–ª—å–Ω–∏—Ü–∞ –ê—Ä–∑–∞–º–∞—Å–∞¬†', 'green', ['command' => $foo[0][0] . ' o:3']);
                    $btn_lit = $vk->buttonText('‚öïÔ∏è –ë–æ–ª—å–Ω–∏—Ü–∞ –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ', 'green', ['command' => $foo[0][0] . ' o:19']);
                    $btn_ed = $vk->buttonText('¬†¬†¬†¬†¬†üíä –ë–æ–ª—å–Ω–∏—Ü–∞ –≠–¥–æ–≤–æ¬†¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:8']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(3,19,8))]);
                    $buttons = [[$btn_arz],[$btn_lit],[$btn_ed],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;

                case 4:
                    $btn_arz = $vk->buttonText('¬†¬†üì∞ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –ê—Ä–∑–∞–º–∞—Å¬†¬†¬†', 'green', ['command' => $foo[0][0] . ' o:21']);
                    $btn_lit = $vk->buttonText('üé§ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –õ—ã—Ç–∫–∞—Ä–∏–Ω–æ', 'green', ['command' => $foo[0][0] . ' o:6']);
                    $btn_all = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üòä –û–±—â–∏–π —Å–ø–∏—Å–æ–∫¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'white', ['command' => $foo[0][0] . ' o:0 a:'.json_encode(array(21,6))]);
                    $buttons = [[$btn_arz],[$btn_lit],[$btn_all]];
                    $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –°–ú–ò | ". $serversnamerodina[$foo[2][0] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
                    break;
                default:
                  $vk->SendMessage($peer_id,'ü§î –û–π-–æ–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —Ç–∞–∫–æ–≥–æ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
                  break;
              }
            }
          }
      } elseif(preg_match_all('/p:(\d+) s:(\d+) a:(\d+) c:(\d+) o:(\d+)/',$payload,$foo))
      {
        if(isPermission($id,1))
        {
          if(timecmd($id,5))
          {
            if(preg_match_all('/p:(\d+) s:(\d+) a:(\d+) c:(\d+) o:(\d+) a:(.*)/',$payload,$foo_all) and $foo[5][0] == 0)
            {
              $msg = "";
              $array = json_decode($foo_all[6][0]);
              foreach ($array as $key => $value) {
                $msg .= getOrgMembers($foo_all[1][0],$foo_all[2][0],$value,1);
              }
              $vk->SendMessage($peer_id,"$msg",['disable_mentions' => 1, 'dont_parse_links' => 1]);
            } elseif($foo[5][0] != 0) {
              getOrgMembers($foo[1][0],$foo[2][0],$foo[5][0]);
            }
          }
        }
      }

      if(preg_match_all('/show_members_(\d+)_(\d+)_(\d+)/',$payload,$foo))
      {
          if(isPermission($id,1))
          {
            if(timecmd($id,5))
            {
              showMembers($foo[1][0],$foo[2][0],$foo[3][0]);
            }
          }
      }





    //buffers
    $b = R::findone('buffer','user_id = ?',[$id]);
    if($b)
    {
        if($b->mbuffer)
        { 
            $a = crossServer($message,$arizona_max,$serversname);
            if($a[0]) {
                $btn_state = $vk->buttonText('üá∫üá∏ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã', 'blue', ['command' => 'p:0 s:'.$a[1].' a:0']);
                $btn_maf = $vk->buttonText('¬†¬†¬†¬†¬†üïµÔ∏è –ü—Ä–µ—Å—Ç—É–ø–Ω—ã–µ —Å–∏–Ω–¥–∏–∫–∞—Ç—ã¬†¬†¬†¬†', 'red', ['command' => 'p:0 s:'.$a[1].' a:1']);
                $btn_ghetto = $vk->buttonText('¬†¬†¬†¬†¬†¬†üî´ –£–ª–∏—á–Ω—ã–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏¬†¬†¬†¬†¬†¬†', 'green', ['command' => 'p:0 s:'.$a[1].' a:2']);
                $buttons = [[$btn_state],[$btn_maf],[$btn_ghetto]];
                $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ—Ä–∞–∫—Ü–∏–π | ". $serversname[$a[1] - 1] . ' ' . $stickers[$a[1] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
            } else {
                $vk->SendMessage($peer_id,"‚ùå [id$id|–í—ã] –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
            }
            clearBuffer($id);
        }

        if($b->mrodinabuffer)
        {
            $a = crossServer($message,$rodina_max,$serversnamerodina);
            if($a[0])
            {
                $btn_state = $vk->buttonText('üá∑üá∫ –ì–æ—Å.—Å—Ç—Ä—É–∫—Ç—É—Ä—ã', 'blue', ['command' => 'p:1 s:'.$a[1].' a:0']);
                $btn_maf = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†üïµÔ∏è –ú–∞—Ñ–∏–∏¬†¬†¬†¬†¬†¬†¬†', 'red', ['command' => 'p:1 s:'.$a[1].' a:1']);
                $btn_ghetto = $vk->buttonText('¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üî´ –û–ü–ì¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†', 'green', ['command' => 'p:1 s:'.$a[1].' a:2']);
                $buttons = [[$btn_state],[$btn_maf],[$btn_ghetto]];
                $vk->sendButton($peer_id, "[id$id|üñ•Ô∏è] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ—Ä–∞–∫—Ü–∏–π | ". $serversnamerodina[$a[1] - 1],$buttons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);              
            } else {
                $vk->SendMessage($peer_id,"‚ùå [id$id|–í—ã] –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
            }
            clearBuffer($id);
        }

        if($b->leadbuffer) 
        {
          showLeaders(0,$message);
          clearBuffer($id);
        }

        if($b->leadrodinabuffer) 
        {
          showLeaders(1,$message);
          clearBuffer($id);
        }

        if($b->snbuffer) {
          setNickMe($message);
          clearBuffer($id);
        }

        if($b->sstbuffer) {
          setStatusMe($message);
          clearBuffer($id);
        }

        exit;
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



    if (mb_substr($messagecmd, 0, 5) == '+menu') {
        if (isPermission($id,1)) {
            if (timecmd($id,5)) {
                $vk->sendButton($peer_id, "–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", $btns_menu, true);
            }
        }
        exit;
    }

    if(mb_substr($messagecmd,0,6) == '+mhelp')
    {
      if (isPermission($id, 1, $vk,$peer_id)) {
        if (timecmd($id,5)) {
            $vk->SendMessage($peer_id,"üíö –ö–æ–º–∞–Ω–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:
            \nüåµ Arizona RP
            \nüá∫üá∏ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç(+state): +gov | +bank | +as | +insurance 
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –Æ—Å—Ç–∏—Ü–∏–∏(+justice): +fbi | +lspd | +sfpd | +lvpd | +rcsd
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã(+defence): +lsa | +sfa | +msp
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è(+health): +lsmc | +sfmc | +lvmc
            –°—Ä–µ–¥—Å—Ç–≤–∞ –ú–∞—Å—Å–æ–≤–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏(+media): +rls | +rsf | +rlv
            \nüî´ –ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n
            –ë–∞–Ω–¥—ã(+ghetto): +grove | +ballas | +vagos | +rifa | +aztec | +nw
            –ú–∞—Ñ–∏–∏(+mafia): +wmc | +rm | +yakuza | +lcn | +brotherhood
            \nüá∑üá∫ Rodina RP
            \nüá∑üá∫ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç(+r_state): +ap | +rbank 
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –Æ—Å—Ç–∏—Ü–∏–∏(+r_justice): +fsb | +arpd | +edpd | +ltpd
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã(+r_defence): +army | +tsr
            –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è(+r_health): +armc | +ltmc | +edmc
            –°—Ä–µ–¥—Å—Ç–≤–∞ –ú–∞—Å—Å–æ–≤–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏(+r_media): +rar | +rlt
            \nüî´ –ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n
            –û–ü–ì(+r_edc): +fantom | +cat | +orderlies | +lads
            –ú–∞—Ñ–∏–∏(+r_mafia): +rusmafia | +uamafia | +kavkazmafia");
          }
        }
        exit;
    }

    if(mb_substr($messagecmd,0,5) == '+help')
    {
      if(timecmd($id,5))
      {
        help();
      }
      exit;
    }

    if(mb_substr($messagecmd, 0, 12) == "+add_cracker") {
      if (isPermission($id, 4)) {
        if (timecmd($id, 1)) {
          if(preg_match("/^\+add_cracker (.+)/", $messagecmd, $foo)) {
            if(!R::findone('warningwords', 'word = ?', [$foo[1]])) {
              $newWord = R::dispense('warningwords');
              $newWord->word = $foo[1];
              $newWord->add_time = time();
              $newWord->creator = $id;
              R::store($newWord);
              $vk->SendMessage($peer_id, "‚úîÔ∏è –¢–∞–∫–æ–µ —Å–ª–æ–≤–æ/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–æ –∑–∞–Ω–µ—Å–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–∑–ª–æ–º-—Ç–µ–º.");
              exit;
            } else {
              $vk->SendMessage($peer_id, "‚ùå –¢–∞–∫–æ–µ —Å–ª–æ–≤–æ/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–Ω–µ—Å–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫.");
              exit;
            }
          } else {
            $vk->SendMessage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +add_cracker [–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–°–ª–æ–≤–æ]");
            exit;
          }
        }
      }
      exit;
    }

    if(mb_substr($messagecmd, 0, 13) == "+dell_cracker") {
      if (isPermission($id, 4)) {
        if (timecmd($id, 1)) {
          if(preg_match("/^\+dell_cracker (.+)/", $messagecmd, $foo)) {
            $findWord = R::findone('warningwords', 'word = ?', [$foo[1]]);
            if($findWord) {
              R::trash($findWord);
              $vk->SendMessage($peer_id, "‚úîÔ∏è –¢–∞–∫–æ–µ —Å–ª–æ–≤–æ/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞.");
              exit;
            } else {
              $vk->SendMessage($peer_id, "‚ùå –¢–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
              exit;
            }
          } else {
            $vk->SendMessage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +dell_cracker [–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–°–ª–æ–≤–æ]");
            exit;
          }
        }
      }
      exit;
    }


    if(mb_substr($messagecmd, 0, 13) == "+list_cracker") {
      if (isPermission($id, 4)) {
        if (timecmd($id, 1)) {
          if(preg_match("/^\+list_cracker/", $messagecmd, $foo)) {
            $findWord = R::findall('warningwords');
            if($findWord) {
              $msgResult = "üìù –°–ø–∏—Å–æ–∫ –≤–∑–ª–æ–º-–ø—Ä–æ–¥–∞–Ω-—Å–ª–æ–≤:\n\n";
              $i = 1;
              foreach ($findWord as $key => $value) {
                $msgResult .= $i . '. ' . $value['word'] . " | –î–æ–±–∞–≤–∏–ª: " . getName($value['creator']) . "\n";
                $i++;
              }
              $vk->SendMessage($peer_id, "$msgResult");
            } else {
              $vk->SendMessage($peer_id, "‚ùå –ö–∞–∂–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –≤–∑–ª–æ–º-–ø—Ä–æ–¥–∞–Ω-—Å–ª–æ–≤ –ø—É—Å—Ç.");
            }

          } else {
            $vk->SendMessage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +list_cracker");
          }
        }
      }
      exit;
    }

    if(mb_substr($messagecmd, 0, 13) == "+access_tools") {
      if (isToolsPermission($id, 2)) {
        if (timecmd($id, 1)) {
          if(preg_match("/^\+access_tools \[id(\d+)\|.+] (\d+)/", $messagecmd, $foo)) {
            $isFinded = R::Findone('accounts', 'vk_id = ?', [$foo[1]]);
            if($isFinded) {
              if($foo[2] < 0 and $foo[2] > 1) {
                $vk->SendMessage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +access_tools [–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ] [0/1]");
                exit;
              }

              if($isFinded->tester == $foo[2]) {
                $vk->SendMessage($peer_id, "‚ùå –¢–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ —Ç–µ—Å—Ç–µ—Ä–∞ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.");
                exit;
              }

              $isFinded->tester = $foo[2];
              R::store($isFinded);
              if ($foo[2] == 0) {
                $vk->SendMessage($peer_id, "‚úîÔ∏è –î–æ—Å—Ç—É–ø —Ç–µ—Å—Ç–µ—Ä–∞ —Å–Ω—è—Ç —É [id". $isFinded->vk_id . "|" . getName($isFinded->vk_id) . "]");
              } else {
                $vk->SendMessage($peer_id, "‚úîÔ∏è –î–æ—Å—Ç—É–ø —Ç–µ—Å—Ç–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω –¥–ª—è [id". $isFinded->vk_id . "|" . getName($isFinded->vk_id) . "]");
              }
            } else {
              $vk->SendMessage($peer_id, "‚ùå –£–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î Mint ID.");
            }
          } else {
            $vk->SendMessage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +access_tools [–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ] [0/1]");
          }
        }
      }
      exit;
    }

    if(mb_substr($messagecmd,0,5) == '+frac')
    {
      if(isPermission($id,1))
      {
        if(timecmd($id,5))
        {
          if(preg_match_all('/\+frac (\d+) (.+) (.+)/',$message,$foo))
          {
            if($foo[1][0] >= 0 && $foo[1][0] <= 1) {
              $a;
              if($foo[1][0] == 0) {
                $a = crossServer($foo[2][0],$arizona_max,$serversname);
              } elseif($foo[1][0] == 1) {
                $a = crossServer($foo[2][0],$rodina_max,$serversnamerodina);
              }

              if($a[0]) {
                $url = 'https://api.mint-plantation.com/player.php?p='.$foo[1][0].'&s='.$a[1].'&n='.$foo[3][0];
                $curl = curl_init($url);
                curl_setopt($curl, CURLOPT_URL, $url);
                curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: -"));
                $array = json_decode(curl_exec($curl),true);
                curl_close($curl);

                if($array['error'] == 0) {
                  if($array['isOnline']) {
                    $array['isOnline'] = '–í —Å–µ—Ç–∏';
                  } else {
                    $array['isOnline'] = '–ù–µ –≤ —Å–µ—Ç–∏';
                  }
                  if($foo[1][0] == 0) {
                    $vk->SendMessage($peer_id,'‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –Ω–∏–∫—É '.$array['name']." | ID: ".$array['id']."\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ".$org_names_arizona[$array['org']]."\n–†–∞–Ω–≥: ".$array['rankLabel']." [".$array['rank']."]\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ".$array['isOnline']);
                  } elseif($foo[1][0 == 1]) {
                    $vk->SendMessage($peer_id,'‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –Ω–∏–∫—É '.$array['name']."\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ".$org_names_rodina[$array['org']]."\n–†–∞–Ω–≥: ".$array['rank']."\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ".$array['isOnline']);
                  }
                  
                } elseif($array['error'] == 11) {
                  $vk->SendMessage($peer_id,"‚Ñπ " . $foo[3][0] . " –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ —Å–æ—Å—Ç–æ—è—â–∏—Ö –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö!");
                } else {
                  $vk->SendMessage($peer_id,"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
                }

              } else {
                $vk->SendMessage($peer_id,"‚ùå [id$id|–í—ã] –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
                exit;
              }


            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +frac [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞] [–ù–∏–∫]");
            }

          } else {
            $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +frac [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ] [–ù–∏–∫]");
          }
        }
      }
      exit;
    }


    if(mb_substr($messagecmd,0,5) == '+nick')
    {
      if(timecmd($id)) {
        if(preg_match('/\+nick (.+)/',$message,$foo)) {
          setNickMe($foo[1]);
        } else {
          $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +nick [–ù–∏–∫]");
        }
      }
      exit;
    }

    if(mb_substr($messagecmd,0,7) == '+status')
    {
      if(timecmd($id)) {
        if(preg_match('/\+status (.+)/',$message,$foo)) {
          setStatusMe($foo[1]);
        } else {
          $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +status [–°—Ç–∞—Ç—É—Å]");
        }
      }
      exit;
    }

    if(mb_substr($messagecmd,0,8) == '+leaders')
    {
      if(isPermission($id,1))
      {
        if(timecmd($id,5))
        {
          if(preg_match_all('/\+leaders (\d+) (.+)/',$message,$foo))
          {
            showLeaders($foo[1][0],$foo[2][0]);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +leaders [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ]");
          }
        }
      }
      exit;
    }

    if(mb_substr($messagecmd, 0, 6) == '+linfo') {
      if(isPermission($id, 3)) {
        if (timecmd($id,5)) {
          if(preg_match('/\+linfo (.+)/', $message, $foo)) {
            $logApi = new LogApi("dev.leekyraveofficial@gmail.com", "p2429twZssSv");
            $request = $logApi->getInfoNick($foo[1], 19);
            if($request[0]) {
              $vk->SendMessage($peer_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –Ω–∏–∫—É " . $foo[1]  . "[".$request[1]['id'] . "]\n–£—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: " . $request[1]['alvl'] . "\n–£—Ä–æ–≤–µ–Ω—å —Ö–µ–ª–ø–µ—Ä–∫–∏: " . $request[1]['hlvl'] . "\n–£—Ä–æ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç–∞: " . $request[1]['lvl'] . "\n–î–µ–Ω—å–≥–∏: " . $request[1]['money'] . "$\n–î–µ–Ω—å–≥–∏(–ë–ê–ù–ö): " . $request[1]['bank'] . "$\n–î–µ–ø–æ–∑–∏—Ç: " . $request[1]['deposit'] . "$\n–î–æ–Ω–∞—Ç: " . $request[1]['donate'] . " az");
            } elseif ($request[1] == 'Not Found') {
              $vk->SendMessage($peer_id, "‚ùå –¢–∞–∫–æ–≥–æ –Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
            } elseif ($request[1] == "Error") {
              $vk->SendMessage($peer_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–æ—á–∫–∞, –≤–µ—Ä–æ—è—Ç–Ω–æ –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–≥–∞–º!");
            } elseif ($request[1] == "Accept") {
              $vk->SendMessage($peer_id, "‚ùå –ù–∞ –ø–æ—á—Ç—É, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–≤—è–∑–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –ª–æ–≥–æ–≤ –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.");
            }

          } else {
            $vk->SendMesssage($peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +linfo [Nick_Name]");
          }
        }
      }
      exit;
    }


    if(mb_substr($messagecmd,0,9) == '+deputies')
    {
      if(isPermission($id,1))
      {
        if(timecmd($id,5))
        {
          if(preg_match_all('/\+deputies (\d+) (.+)/',$message,$foo))
          {
            showDeputies($foo[1][0],$foo[2][0]);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +deputies [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ]");
          }
        }
      }
      exit;
    }

  
  


    if(mb_substr($messagecmd,0,5) == '+info') {
      if(preg_match_all('/\+info (.+)/',$message,$foo))
      {
        if(preg_match('/\[id(\d+)\|[a-zA-Z–∞-—è–ê-–Ø\s*@\.\-\!\*\d*\_]+\]/',$foo[1][0],$matchedbyId)) {
          showStats($matchedbyId[1]);
        } else {
          $findNick = R::findone('users', 'nick = ?', [$foo[1][0]]);
          if($findNick) {
            showStats($findNick->user_id);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.");
          }
          
        }
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +info [–ù–∏–∫/–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ]");
      }
      exit;
    }

    if(mb_substr($messagecmd,0,7) == '+access') {
      if(preg_match('/\+access \[id(\d+)\|[a-zA-Z–∞-—è–ê-–Ø\s*@\.\-\!\*\d*\_]+\]/',$message,$matchedbyId)) {
        regUser($matchedbyId[1]);
        if(preg_match('')) {

        } else {
          $acces_1 = $vk->buttonText('1&#8419;', 'green', ['command' => 'access_1_'. $matchedbyId[1]]);
          $acces_2 = $vk->buttonText('2&#8419;', 'green', ['command' => 'access_2_'. $matchedbyId[1]]);
          $acces_3 = $vk->buttonText('3&#8419;', 'green', ['command' => 'access_3_'. $matchedbyId[1]]);
          $acces_4 = $vk->buttonText('4&#8419;', 'red', ['command' => 'access_4_'. $matchedbyId[1]]);
          $acces_5 = $vk->buttonText('5&#8419;', 'red', ['command' => 'access_5_'. $matchedbyId[1]]);
          $acces_6 = $vk->buttonText('6&#8419;', 'red', ['command' => 'access_6_'. $matchedbyId[1]]);
          
          $accessButtons = [[$acces_1,$acces_2,$acces_3],[$acces_4,$acces_5,$acces_6]];

          $vk->sendButton($peer_id, "üí≥ –í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–∞ [id".$matchedbyId[1]."|". getNick($matchedbyId[1])."]", $accessButtons, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
          
        }
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +access [–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ] [–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞]");
      }
    }

    if(mb_substr($messagecmd,0,6) == '+tinfo') {
      if(preg_match_all('/\+tinfo (.+)/',$message,$foo))
      {
        if(preg_match('/\[id(\d+)\|[a-zA-Z–∞-—è–ê-–Ø\s*@\.\-\!\*\d*\_]+\]/',$foo[1][0],$matchedbyId)) {
          showStatsTesters($matchedbyId[1]);
        } else {
          $findNick = R::findone('accounts', 'nick = ?', [$foo[1][0]]);
          if($findNick) {
            showStatsTesters($findNick->vk_id);
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î —Ç–µ—Å—Ç–µ—Ä–æ–≤.");
          }
          
        }
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +tinfo [–ù–∏–∫/–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ]");
      }
      exit;
    }

    if(mb_substr($messagecmd,0,8) == '+checkip') {
      if(preg_match('/\+checkip (.+)/',$message,$foo))
      {
        if(preg_match_all('/(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/',$foo[1],$ipMatch)) {
          if($ipMatch[0][1]) {
            $url = 'https://api.mint-plantation.com/geoip.php?reg='.$ipMatch[0][0].'&last='.$ipMatch[0][1];
            $curl = curl_init($url);
            curl_setopt($curl, CURLOPT_URL, $url);
            curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
            $ipArray = json_decode(curl_exec($curl),true);
            curl_close($curl);

            if($ipArray['error'] == 0) {
              $vk->SendMessage($peer_id,"‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω.
              –ü–µ—Ä–≤—ã–π IP: ". $ipMatch[0][0] ."
              –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ". $ipArray['reg']['provider'] ."
              –°—Ç—Ä–∞–Ω–∞: ". $ipArray['reg']['country'] ."
              –ì–æ—Ä–æ–¥: ". $ipArray['reg']['city'] ."
              
              –í—Ç–æ—Ä–æ–π IP: " . $ipMatch[0][1] ."
              –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ". $ipArray['last']['provider'] ."
              –°—Ç—Ä–∞–Ω–∞: ". $ipArray['last']['country'] ."
              –ì–æ—Ä–æ–¥: ". $ipArray['last']['city'] ."
              
              –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É IP ~".$ipArray['distance']."–∫–º");
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
            }
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +checkip [IP] [2-IP]");
          }
        }
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +checkip [IP] [2-IP]");
      }
      exit;
    }

    if(mb_substr($messagecmd,0,9) == '+settings')
    {
      if(isPermission($id,1))
      {
        if(timecmd($id,5))
        {
          $vk->sendButton($peer_id, "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", $btns_profile, true);
        }
      }
      exit;
    }

    if(mb_substr($messagecmd,0,17) == '+getconservations') {
      if(isPermission($id,2)) {
        $vk->SendMessage($peer_id,"[–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ—Å–µ–¥,–≤ –∫–æ—Ç–æ—Ä—ã—Ö —è —Å–æ—Å—Ç–æ—é.");
        $start = microtime(true);
        foreach(range(2000000001, 2000000370) as $peer_i){
          $chat_data = $vk->request('messages.getConversationsById', ['peer_ids' => $peer_i, 'extended' => 0]);
          $newchat_id = $peer_i - 2000000000;
          $title = $chat_data['items'][0]['chat_settings']['title'];
          $vk->SendMessage($peer_id,"–ù–∞–∑–≤–∞–Ω–∏–µ: $title\n"."ID –±–µ—Å–µ–¥—ã: $newchat_id");
          sleep(0.1);
        }
       }
       exit;
    }
    if(mb_substr($messagecmd,0,6) == '+minfo') {
        showStats($id);
        exit;
      }

    if(mb_substr($messagecmd,0,8) == '+records')
    {
      if(isPermission($id,1))
      {
        if(timecmd($id,5))
        {
          if(preg_match_all('/\+records (.+)/',$message,$foo))
          {
            if($foo[1][0] == 'Sargon_Loud') {
              $vk->SendMessage($peer_id,"üìù –†–µ–∫–æ—Ä–¥—ã –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ Sargon_Loud\n\nArizona ‚Äî –ù–∞–π–¥–µ–Ω–æ —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤ –Ω–∞ –ê—Ä–∏–∑–æ–Ω–µ –∏ –∑–∞ —ç—Ç–æ –µ–º—É –≤—ã–¥–µ–ª–µ–Ω–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç—Ä–∏ —Å—Ç—Ä–æ—á–∫–∏ –∫–æ–¥–∞ –≤ –±–æ—Ç–µ.");
              exit;
            }
            $url = 'https://api.mint-plantation.com/records.php?n='.$foo[1][0];
            $curl = curl_init($url);
            curl_setopt($curl, CURLOPT_URL, $url);
            curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: -"));
            $array = json_decode(curl_exec($curl),true);
            curl_close($curl);

            if($array['error'] == 0) {
              $msg = "";
              foreach($array['row'] as $key => $value) {
                preg_match_all('/(.+) .+/',$value['date'],$tfoo);
                $recordDate = preg_replace('/\./','-',$tfoo[1][0]);
                if($value['project'] == 0) {
                  $msg .=  'Arizona ‚Äî ' . $serversname[$value['server'] - 1] . ' | ' . $org_names_arizona[$value['org']] . ' | ' . $value['record'] . ' —á–µ–ª. | ' . $recordDate . "\n";
                } elseif($value['project'] == 1) {
                  $msg .=  'Rodina ‚Äî ' . $serversnamerodina[$value['server'] - 1] . ' | ' . $org_names_rodina[$value['org']] . ' | ' . $value['record'] . ' —á–µ–ª. | ' . $recordDate . "\n";
                }
              }
              $vk->SendMessage($peer_id,"üìù –†–µ–∫–æ—Ä–¥—ã –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ ".$foo[1][0]."\n\n". $msg);
            } elseif($array['error'] == '14') {
              $vk->SendMessage($peer_id,'üìù –†–µ–∫–æ—Ä–¥—ã –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ ' . $foo[1][0] . ' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            }
          } else {
            $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +records [–ù–∏–∫]");
          }
        }
      }
      exit;
    }

    $orgs_commands = array(
      'lspd',
      'rcsd',
      'fbi',
      'sfpd',
      'lsmc',
      'gov',
      'msp',
      'sfmc',
      'as',
      'rls',
      'grove',
      'vagos',
      'ballas',
      'aztec',
      'rifa',
      'rm',
      'yakuza',
      'lcn',
      'wmc',
      'lsa',
      'bank',
      'lvmc',
      'lvpd',
      'rlv',
      'nw',
      'rsf',
      'sfa',
      'brotherhood',
      'insurance',
      
      'arpd', // 1
      'ltpd', // 2
      'armc', // 3
      'ap', // 4
      'aschool', // 5
      'rlt', // 6
      'fantom', // 7
      'edmc', // 8
      'cat', // 9
      'orderlies', // 10
      'lads', // 11
      'rusmafia', // 12
      'uamafia', // 13
      'kavkazmafia', // 14
      'fsb', // 15
      'army', // 16
      'rbank', // 17
      'tsr', // 18
      'ltmc', // 19
      'edpd',  // 20
      'rar', // 21
    );

    if(preg_match_all('/\+(\w+)/',$messagecmd,$matched))
    {
      $flipped = array_flip($orgs_commands);
      if(array_key_exists($matched[1][0],$flipped))
      {
        if(isPermission($id,1))
        {
          if(timecmd($id,5))
          {
            if(preg_match_all('/\+(\w+)\s+(.*)/',$messagecmd,$foo))
            {
              if($flipped[$matched[1][0]] > 28)
              {
                $a = crossServer($foo[2][0], $rodina_max, $serversnamerodina);
                if($a[0])
                {
                  getOrgMembers(1,$a[1],$flipped[$matched[1][0]] - 28);
                } else {
                  $vk->SendMessage($peer_id,"[id$id|‚ùå] –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
                }
              } elseif ($flipped[$matched[1][0]] <= 28)
              {
                $a = crossServer($foo[2][0], $arizona_max, $serversname);
                if($a[0])
                {
                  getOrgMembers(0,$a[1],$flipped[$matched[1][0]] + 1);
                } else {
                  $vk->SendMessage($peer_id,"[id$id|‚ùå] –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
                }
              }
              
            } else {
              $vk->SendMessage($peer_id,"[id$id|‚ùå] –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +". $matched[1][0] ." [–ù–æ–º–µ—Ä / –ù–∞–∑–≤–∞–Ω–∏–µ]", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
            }
          }
        }
        exit;
      }
    }

    $orgs_commands_all = array(
      'state' => array(6,21,9,29),
      'justice' => array(1,4,2,23,3),
      'defence' => array(20,27,7),
      'health' => array(5,8,22),
      'media' => array(10,26,24),
      'ghetto' => array(11,13,12,14,15,25),
      'mafia' => array(17,18,16,19),

      'r_state' => array(4,17),
      'r_justice' => array(1,2,20,15),
      'r_defence' => array(16,18),
      'r_health' => array(3,19,8),
      'r_media' => array(21,6),
      'r_edc' => array(10,9,11,7),
      'r_mafia' => array(12,13,14)
    );
    if(preg_match_all('/\+(\w+)/',$messagecmd,$matched))
    {
      if(array_key_exists($matched[1][0],$orgs_commands_all))
      {
        if(isPermission($id,1))
        {
          if(timecmd($id,5))
          {
            if(preg_match_all('/\+(\w+)\s+(.*)/',$messagecmd,$foo))
            {
              if(preg_match_all('/\+r_.*/',$messagecmd))
              {
                $a = crossServer($foo[2][0], $rodina_max, $serversnamerodina);
                if($a[0])
                {
                  $msg = '';
                  foreach ($orgs_commands_all[$matched[1][0]] as $key => $value) {
                    $msg .= getOrgMembers(1,$a[1],$value,1);
                  }
                  $vk->SendMessage($peer_id,$msg);
                }
              } else {
                $a = crossServer($foo[2][0], $arizona_max, $serversname);
                if($a[0])
                {
                  $msg = '';
                  foreach ($orgs_commands_all[$matched[1][0]] as $key => $value) {
                    $msg .= getOrgMembers(0,$a[1],$value,1);
                  }
                  $vk->SendMessage($peer_id,$msg);
                } else {
                  $vk->SendMessage($peer_id,"[id$id|‚ùå] –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
                }
              }
            } else {
              $vk->SendMessage($peer_id,"[id$id|‚ùå] –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +". $matched[1][0] ." [–ù–æ–º–µ—Ä / –ù–∞–∑–≤–∞–Ω–∏–µ]", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
            }
          }
        }
        exit;
      }
    }

    if(preg_match_all('/^\+stabing/', $messagecmd)) {
      $vk_test = vk_api::create("vk1.a.7pGyBdUOjKY8rTnZdj-8OH6_cPVTez59vCsffDzcdKRgjqwTAbW-PrSMggpF-nWpZQXqTgu22RdemC0vPH7KWaVLrK727pggPMxrWLFsNL5KbGPkbI00UU4EZe71bRVbPAeEHUB1URin4laJA1QBwvZTR_zIhex8e4KDKxGNtryuQKJ9oVHsDTZDHaW6zhhA", '5.126');
      
      while (true) {
        $unreadMessages = $vk_test->request('messages.getConversations',["filter" => "unread"]);
        $vk_test->request('status.set',['text' => "ü§ì –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: " . $unreadMessages['unread_count']]);
        sleep(60);
      }
      exit;
    }

    if($peer_id == 2000000595) {
      if(isPermission($id,1)) {
        
          if(mb_substr($messagecmd,0,4) == '+pin') {
            if(preg_match('/^\+pin https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*/',$messagecmd, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->pinThread($foo[1]);
              if($request[0]) {
                $vk->SendMessage($peer_id, "‚úÖ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞");
              } else {
                $vk->SendMessage($peer_id, "‚ùå " . $request[1]);
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +pin [URL]");
            }
            exit;
          }
  
          if(mb_substr($messagecmd,0,6) == '+unpin') {
            if(preg_match('/^\+unpin https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*/',$messagecmd, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->unpinThread($foo[1]);
              if($request[0]) {
                $vk->SendMessage($peer_id, "‚úÖ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∞");
              } else {
                $vk->SendMessage($peer_id, "‚ùå " . $request[1]);
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +unpin [URL]");
            }
            exit;
          }
  
          if(mb_substr($messagecmd,0,6) == '+close') {
            if(preg_match('/^\+close https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*/',$messagecmd, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->closeThread($foo[1]);
              if($request[0]) {
                $vk->SendMessage($peer_id, "‚úÖ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞.");
              } else {
                $vk->SendMessage($peer_id, "‚ùå " . $request[1]);
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +close [URL]");
            }
            exit;
          }
  
          if(mb_substr($messagecmd,0,5) == '+open') {
            if(preg_match('/^\+open https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*/',$messagecmd, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->openThread($foo[1]);
              if($request[0]) {
                $vk->SendMessage($peer_id, "‚úÖ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞.");
              } else {
                $vk->SendMessage($peer_id, "‚ùå " . $request[1]);
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +open [URL]");
            }
            exit;
          }

          if(mb_substr($messagecmd,0,10) == '+setprefix') {
            if(preg_match('/^\+setprefix https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*\s+(.+)/',$message, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->setPrefix($foo[1], $foo[2]);
              if($request[0]) {
                $vk->SendMessage($peer_id, '‚úÖ –ó–∞–¥–∞–Ω–Ω—ã–π —Ç—ç–≥ "'.$foo[2].'" –¥–ª—è —Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
              } else {
                $vk->SendMessage($peer_id, "‚ùå " . $request[1]);
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +setprefix [URL] [–ü—Ä–µ—Ñ–∏–∫—Å]");
            }
            exit;
          }


          if(mb_substr($messagecmd,0,11) == '+multiclose') {
            if(preg_match('/^\+multiclose https:\/\/forum\.arizona-rp.com\/threads\/(\d+)[\/]*/',$message, $foo)) {
              $forumapi = new ForumApi();
              $forumapi->flogin("leekyraveofficial@gmail.com", "p2429twZssSv");
              $request = $forumapi->setPrefix($foo[1], "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ");
              $requestUnPin = $forumapi->unpinThread($foo[1]);
              $requestClose = $forumapi->closeThread($foo[1]);

              if($request[0]) {
                $vk->SendMessage($peer_id, '‚úÖ –¢–µ–º–∞ –∑–∞–∫—Ä—ã—Ç–∞, –ø—Ä–µ—Ñ–∏–∫—Å "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç–µ–º–∞ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∞.');
              } else {
                $vk->SendMessage($peer_id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–µ—Ñ–∏–∫—Å–∞ "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.');
              }
            } else {
              $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +multiclose [URL] [–ü—Ä–µ—Ñ–∏–∫—Å]");
            }
            exit;
          }
        

      }

      

    }

    if(preg_match_all("/^\+peer_id/",$messagecmd)) {
      $vk->SendMessage($peer_id,"Conversation ID: $peer_id");
      exit;
    }

    if(preg_match_all('/^\+[[:alpha:]]/',$messagecmd))
    {
        $vk->SendMessage($peer_id,"[id$id|‚ùå] –¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +help", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
        exit;
    }
}




function regUser($id) 
{
    global $vk;
    global $log;
    global $peer_id;
    $idgroup = mb_substr($id, 0, 1);
    if ($idgroup == "-") {
      exit;
    }
    $userInfo = $vk->request("users.get", ["user_ids" => $id]);
    $first_name = $userInfo[0]['first_name'];
    $last_name = $userInfo[0]['last_name'];
    $user = R::findOne('users', 'user_id = ?', [$id]);
    if (!$user) {
        $newUser = R::dispense("users"); // –í—ã–±—Ä–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—É
        $newUser->user_id = $id; // –°—Ç–æ–ª–±–µ—Ü id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∫
        $newUser->nick = ""; // –°—Ç–æ–ª–±–µ—Ü –¥–ª—è –Ω–∏–∫, –¥–ª—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏—à–µ–¥—à–µ–≥–æ —Å—Ç–∞–≤–∏–º –µ–≥–æ –∏–º—è
        $newUser->name = $first_name . " " . $last_name;
        $newUser->dostyp = 1; // –°—Ç–æ–ª–±–µ—Ü –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1 –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∞–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
        $newUser->status = "";
        $newUser->lupdate = 0;
        $newUser->swarn = 0;
        $newUser->linkto = 0;
        $newUser->cooldown = 0;
        $newUser->regDate = date("d.m.Y, H:i:s"); // –°—Ç–æ–ª–±–µ—Ü –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        R::store($newUser); // –ó–∞–ø–∏—Å–∞–ª–∏ –≤ –±–∞–∑—É


        $chat_data = $vk->request('messages.getConversationsById', ['peer_ids' => $peer_id, 'extended' => 0]);
        $title = $chat_data['items'][0]['chat_settings']['title'];
        $vk->sendMessage($log, "[id$id|$first_name $last_name] –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n–ò—Å—Ç–æ—á–Ω–∏–∫: $title ($peer_id)", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
    }
}


/**
 * Get User Permission
 * @param int $id ‚Äî user's vk id
 * @param int $lvl ‚Äî compared value
 * @param object $vk - library
 * @param int $peer_id - conversation id
 * @return bool
 *
 */

function isPermission($id, $lvl,$variant = 1)
{
    global $vk;
    global $peer_id;

    $getdostyp = R::findone('users', 'user_id = ?', [$id]);
    $getdostyp = $getdostyp->dostyp;
    if ($getdostyp >= $lvl) {
        return true;
    } else {
    if($variant == 1) {
        $vk->sendMessage($peer_id, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å " . $lvl . " —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞. –£ –≤–∞—Å: " . $getdostyp . ".");
    }
        return false;
    }
}

function isToolsPermission($id, $lvl,$variant = 1)
{
    global $vk;
    global $peer_id;

    $getdostyp = R::findone('accounts', 'vk_id = ?', [$id]);
    $getdostyp = $getdostyp->access;
    if ($getdostyp >= $lvl) {
        return true;
    } else {
    if($variant == 1) {
        $vk->sendMessage($peer_id, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å " . $lvl . " —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ Mint ID. –£ –≤–∞—Å: " . $getdostyp . ".");
    }
        return false;
    }
}

function setNickMe($nick)
{
  global $id;
  global $vk;
  global $peer_id;
  if(isPermission($id,1)) {
    $user = R::findone('users','user_id = ?',[$id]);
    if($user) {
      if($user->nick == $nick) {
        $vk->SendMessage($peer_id,"‚ùå –£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–∞–Ω–Ω—ã–π –Ω–∏–∫!");
      } else {
        $isReal = R::findone('users','nick = ?',[$nick]);
        if($isReal)
        {
          $vk->SendMessage($peer_id,"‚ùå –î–∞–Ω–Ω—ã–π –Ω–∏–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è [id". $isReal->user_id . "|" . getName($s->user_id) . "]",['disable_mentions' => 1, 'dont_parse_links' => 1]);
        } else {
          $user->nick = $nick;
          R::store($user);
          $vk->SendMessage($peer_id,'‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ "'.$nick.'" –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∏–∫-–Ω–µ–π–º–∞.');
          regUpdate($id,$id);
        }
      }
    }
  }
  clearBuffer($id);
}

function setStatusMe($status)
{
  global $id;
  global $vk;
  global $peer_id;
  if(isPermission($id,1)) {
    $user = R::findone('users','user_id = ?',[$id]);
    if($user) {
      $user->status = $status;
      R::store($user);
      $vk->SendMessage($peer_id,'‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ "'.$status.'" –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç–∞—Ç—É—Å–∞.');
      regUpdate($id,$id);
    }
  }
  clearBuffer($id);
}


/**
 * Get User Permission
 * @param int $id ‚Äî user's vk id
 * @return int
 *
 */

function getPermission($id)
{
  $getdostyp = R::findone('users', 'user_id = ?', [$id]);
  if ($getdostyp) {
    return $getdostyp->dostyp;
  } else {
    return 1;
  }
}

function IsinBuffer($id)
{
    $b = R::findone('buffer','user_id = ?',[$id]);
    if($b)
    {
        return true;
    } else {
        return false;
    }
}

function clearBuffer($id)
{
  if(IsinBuffer($id))
  {
    $b = R::findone('buffer','user_id = ?',[$id]);
    R::trash($b);
  }
}



/**
 * Cooldown between cmds or sending text
 * @param int $id ‚Äî user's vk id
 * @param object $vk ‚Äî library
 * @param int $peer_id ‚Äî user_id/conversation_id
 * @return bool
 *
 */

function timecmd($id,$cd = 5)
{
    global $vk;
    global $peer_id;
    $timecmd = R::findone('users', 'user_id = ?', [$id]);
    if ($timecmd) {
        $resultcd = time() - $timecmd->cooldown;
        if ($resultcd >= $cd) {
        $timecmd->cooldown = time();
        R::store($timecmd);
        return true;
        } else {
        $resultcd = $cd - $resultcd;
        
        $vk->sendMessage($peer_id, "–ù–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ, —è –º–æ–≥—É –ø–µ—Ä–µ–≥—Ä–µ—Ç—å—Å—è!\n–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ $resultcd ". numberof($resultcd, '—Å–µ–∫—É–Ω', array('–¥—É', '–¥—ã', '–¥')) . ".");
        return false;
        }
    }
}


function getName($id)
{
    global $vk;
    if($id == 0) {
        return "–°–∏—Å—Ç–µ–º–∞";
    } else {
        $userInfo = $vk->request("users.get", ["user_ids" => $id]);
        $first_name = $userInfo[0]['first_name'];
        $last_name = $userInfo[0]['last_name'];
        $full_name = $first_name . " " . $last_name;
        return $full_name;
    }
}

function getNick($id)
{
    if(isLeader($id))
    {
        $i = R::findone('leaders','user_id = ?',[$id]);
        return $i->nick;
    } else {
        $i = R::findone('users','user_id = ?',[$id]);
        if($i->nick == "")
        {
            return getName($id);
        } else {
            return $i->nick;
        }
    }
}

function regUpdate($id,$updater)
{
    $l = R::findone('users','user_id = ?',[$id]);
    $l->lupdate = $updater;
    R::store($l);
}

function isLeader($id)
{
    $isl = R::findone('leaders','user_id = ?',[$id]);
    if($isl) {
        return true;
    } else {
        return false;
    }
}



function showStats($id)
{
  global $vk;
  global $peer_id;
  if(isPermission($id,1))
  {
    if(timecmd($id))
    {
      regUser($id);
      
      $user = R::findone('users', 'user_id = ?', [$id]);
      $nickUser;
      $statusUser;
      if(iconv_strlen($user->nick) == 0) {
        $nickUser = "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω";
      } else {
        $nickUser = $user->nick;
      }

      if(iconv_strlen($user->status) == 0) {
        $statusUser = "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω";
      } else {
        $statusUser = $user->status;
      }
      $pinnedBy;
      if($user->linkto == 0) {
        $pinnedBy = 'üìç –ù–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º';
      } else {
        $pinnedBy = 'üìç –ó–∞–∫—Ä–µ–ø–ª–µ–Ω –∑–∞ '.$user->linkto.' —Å–µ—Ä–≤–µ—Ä–æ–º';
      }

      $lupdate;
      if($user->lupdate == 0) {
        $lupdate = getName($user->lupdate);
      } else {
        $lupdate = "[id" . $user->lupdate . "|". getName($user->lupdate) . "]";
      }

      $vk->SendMessage($peer_id,"‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ [id" . $id . "|" . getName($id) . "]\nüìÑ –ù–∏–∫-–Ω–µ–π–º: $nickUser\nüÜî ID –≤ –ë–î: " . $user->id . "\nüìñ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $statusUser\n$pinnedBy\nüîÉ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $lupdate", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
    }
  }
}


function showStatsTesters($idu)
{
  global $vk;
  global $peer_id;
  global $id;
  if(isToolsPermission($id,2))
  {
    if(timecmd($id))
    {
      regUser($id);
      
      $user = R::findone('accounts', 'vk_id = ?', [$idu]);
      $date = new DateTime();
      $date->setTimestamp($user->last_time);

      $vk->SendMessage($peer_id,"‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ [id" . $idu . "|" . getName($idu) . "]\n–õ–æ–≥–∏–Ω: ". $user->login ."\n–ù–∏–∫: " . $user->nick . "\n–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: " . $user->access . "\nReg IP: " . $user->reg_ip . "\nLast IP: " . $user->last_ip . "\nReg Serial: " . $user->reg_serial . "\nLast Serial: " . $user->last_serial . "\nLast login: " . $date->format('d.m.Y | H:i:s'), ['disable_mentions' => 1, 'dont_parse_links' => 1]);
    }
  }
}

/**
 * –°–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö
 * @param int $numberof ‚Äî —Å–∫–ª–æ–Ω—è–µ–º–æ–µ —á–∏—Å–ª–æ
 * @param string $value ‚Äî –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å —Å–ª–æ–≤–∞ (–º–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å –∫–æ—Ä–Ω–µ–º)
 * @param array $suffix ‚Äî –º–∞—Å—Å–∏–≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–∫–æ–Ω—á–∞–Ω–∏–π —Å–ª–æ–≤
 * @return string
 *
 */

function numberof($numberof, $value, $suffix)
{
    $keys = array(2, 0, 1, 1, 1, 2);
    $mod = $numberof % 100;
    $suffix_key = $mod > 4 && $mod < 20 ? 2 : $keys[min($mod%10, 5)];
     
    return $value . $suffix[$suffix_key];
}


function help()
{
  global $vk;
  global $id;
  global $peer_id;
  $permission = getPermission($id);
  if(isPermission($id,1))
  {
    $helpcmd = "üìù –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n";
    if($permission >= 1)
    {
      $helpcmd .= "
      üåï || +menu     - –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      üåï || +settings - –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
      üåï || +nick     - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–∞–º —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–∏–∫ –≥–ª–æ–±–∞–ª—å–Ω–æ
      üåï || +status   - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–∞–º —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
      üåï || +info     - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      üåï || +minfo    - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ
      üåï || +mhelp    - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      üåï || +leaders  - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤
      üåï || +deputies - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–π
      üåï || +frac     - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∫–∞–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–≥—Ä–æ–∫
      üåï || +records  - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∫–æ—Ä–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–º
      üåï || +pin      - –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–º—É –Ω–∞ —Ñ–æ—Ä—É–º–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏)
      üåï || +unpin    - –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–º—É –Ω–∞ —Ñ–æ—Ä—É–º–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏)
      üåï || +close    - –∑–∞–∫—Ä—ã—Ç—å —Ç–µ–º—É –Ω–∞ —Ñ–æ—Ä—É–º–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏)
      üåï || +open     - –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ–º—É –Ω–∞ —Ñ–æ—Ä—É–º–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏)
      üåï || +setprefix - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å —Ç–µ–º–µ –Ω–∞ —Ñ–æ—Ä—É–º–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏)
      üåë || +cset     - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã";
    }


    $helpcmd .= "
    
    –ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫ –∫–æ–º–∞–Ω–¥–∞–º:
    - –ï—Å–ª–∏ —Å–º–∞–π–ª–∏–∫ 'üåë' - —Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!
    - –ï—Å–ª–∏ —Å–º–∞–π–ª–∏–∫ '‚ö†' - —Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –±–∞–≥–∏!";

    $vk->SendMessage($peer_id,$helpcmd);
  }
}

function showLeaders($project,$server)
{
  global $vk;
  global $id;
  global $peer_id;
  global $arizona_max;
  global $serversnamerodina;
  global $rodina_max;
  global $org_names_arizona;
  global $org_names_rodina;
  global $serversname;

  if($project >= 0 && $project <= 1) {
    $a;
    if($project == 0) {
      $a = crossServer($server,$arizona_max,$serversname);
    } elseif($project == 1) {
      $a = crossServer($server,$rodina_max,$serversnamerodina);
    }

    if($a[0]) {
      $url = 'https://api.mint-plantation.com/leaders.php?p='.$project.'&s='.$a[1];
      $curl = curl_init($url);
      curl_setopt($curl, CURLOPT_URL, $url);
      curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
      curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: -"));
      $array = json_decode(curl_exec($curl),true);
      curl_close($curl);

      if($array['error'] == 0) {
        if($array['isOnline']) {
          $array['isOnline'] = '–í —Å–µ—Ç–∏';
        } else {
          $array['isOnline'] = '–ù–µ –≤ —Å–µ—Ç–∏';
        }
        $msg = "";
        foreach($array[0] as $key => $value) {
          $online;
          if($value['isOnline'])
          {
            $online = "üåù";
          } else {
            $online = "üåö";
          }

          if($project == 0) {
            $msg .= $value['name'] . "[".$value['rankLabel']."] ‚Äî " . $org_names_arizona[$value['org']] ." | $online\n";
          } elseif($project == 1) {
            $msg .= $value['name'] . " ‚Äî " . $org_names_rodina[$value['org']] ." | $online\n";
          }
        }

        if($project == 0) {
          $vk->SendMessage($peer_id,"üìù –°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ | " . $serversname[$a[1] - 1] . "\n\n$msg");
        } elseif($project == 1) {
          $vk->SendMessage($peer_id,"üìù –°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ | " . $serversnamerodina[$a[1] - 1] . "\n\n$msg");
        }
        

        
      } elseif($array['error'] == 13) {
        $vk->SendMessage($peer_id,"üìù –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ " . $serversnamerodina[$a[1] - 1] . " –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∏ –æ–¥–∏–Ω –ª–∏–¥–µ—Ä!");
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
      }

    } else {
      $vk->SendMessage($peer_id,"‚ùå [id$id|–í—ã] –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
      exit;
    }


  } else {
    $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +leaders [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞]");
  }
  
}

function showDeputies($project,$server)
{
  global $vk;
  global $id;
  global $peer_id;
  global $arizona_max;
  global $serversnamerodina;
  global $rodina_max;
  global $org_names_arizona;
  global $org_names_rodina;
  global $serversname;

  if($project >= 0 && $project <= 1) {
    $a;
    if($project == 0) {
      $a = crossServer($server,$arizona_max,$serversname);
    } elseif($project == 1) {
      $a = crossServer($server,$rodina_max,$serversnamerodina);
    }

    if($a[0]) {
      $url = 'https://api.mint-plantation.com/deputies.php?p='.$project.'&s='.$a[1];
      $curl = curl_init($url);
      curl_setopt($curl, CURLOPT_URL, $url);
      curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
      curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: -"));
      $array = json_decode(curl_exec($curl),true);
      curl_close($curl);

      if((int)$array['error'] == 0) {
        if($array['isOnline']) {
          $array['isOnline'] = '–í —Å–µ—Ç–∏';
        } else {
          $array['isOnline'] = '–ù–µ –≤ —Å–µ—Ç–∏';
        }
        $msg = "";
        foreach($array[0] as $key => $value) {
          $online;
          if($value['isOnline'])
          {
            $online = "üåù";
          } else {
            $online = "üåö";
          }

          if((int)$project == 0) {
            $msg .= $value['name'] . "[".$value['rankLabel']."] ‚Äî " . $org_names_arizona[$value['org']] ." | $online\n";
          } elseif((int)$project == 1) {
            $msg .= $value['name'] . " ‚Äî " . $org_names_rodina[$value['org']] ." | $online\n";
          }
        }

        if((int)$project == 0) {
          $vk->SendMessage($peer_id,"üìù –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–π | " . $serversname[$a[1] - 1] . "\n\n$msg");
        } elseif((int)$project == 1) {
          $vk->SendMessage($peer_id,"üìù –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–π | " . $serversnamerodina[$a[1] - 1] . "\n\n$msg");
        }
        

        
      } elseif((int)$array['error'] == 13) {
        $vk->SendMessage($peer_id,"üìù –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ " . $serversnamerodina[$a[1] - 1] . " –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∏ –æ–¥–∏–Ω –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å!");
      } else {
        $vk->SendMessage($peer_id,"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
      }

    } else {
      $vk->SendMessage($peer_id,"‚ùå [id$id|–í—ã] –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",['disable_mentions' => 1, 'dont_parse_links' => 1]);
      exit;
    }


  } else {
    $vk->SendMessage($peer_id,"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: +deputies [0 - ARZ / 1 - Rodina] [‚Ññ / –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞]");
  }
  
}


function crossServer($server,$maxServers,$array)
{
    $isreal = false;
    for($i = 1; $i <= $maxServers; $i++)
    {
      if($i == $server)
      {
        $isreal = true;
        break;
      } elseif(mb_strtolower($array[$i - 1]) == mb_strtolower($server)) {
        $isreal = true;
        break;
      }
    }
    return [$isreal,$i];
}


function getOrgMembers($project,$server,$org,$alllist = 0)
{
    global $vk;
    global $peer_id;
    global $serversnamerodina;
    global $serversname;
    global $headers_arizona;
    global $headers_rodina;
    global $stickers;

    $webapi = new WebApi();
    $data = $webapi->getMembers($project,$server,$org);


    if(!is_array($data))
    {
        $vk->SendMessage($peer_id,"ü§î –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!");
        exit;
    }
    $all_players = 0;
    $online_players = 0;
    $offline_players = 0;
    $nick_leader = "–ù–µ —Å—Ç–æ–∏—Ç";
    $prefix_leader = "";
    $online_deputies = 0;
    $deputies = 0;
    $list_deputies = "";

    foreach($data as $key => $value)
    {
      if($value['isLeader'])
      {
        $nick_leader = $value['name'];
        if($value['isOnline'])
        {
          $prefix_leader = "| üåù";
        } else {
          $prefix_leader = "| üåö";
        }
      }


      if($value['rank'] == 9)
      {
        $deputies++;
        if($value['isOnline'])
        {
          $online_deputies++;
          $deputy = R::findone('users','nick = ?',[$value['name']]);
          if($deputy && $deputy->dostyp >= 2)
          {
            $list_deputies .= "[id".$f->user_id."|üåù".$value['name']."]\n";
          } else {
            $list_deputies .= "üåù ".$value['name']."\n";
          }
        } else {
          if($deputy && $deputy->dostyp >= 2)
          {
            $list_deputies .= "[id".$f->user_id."|üåö".$value['name']."]\n";
          } else {
            $list_deputies .= "üåö ".$value['name']."\n";
          }
        }
      }

      if($value['isOnline'])
      {
        $online_players++;
        $all_players++;
      } else {
        $offline_players++;
        $all_players++;
      }
    }

    $record = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    $recordNick = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    $recordDate = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    $changeMobile = array(
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      16 => 16,
      17 => 17,
      18 => 18,
      19 => 19,
      20 => 20,
      21 => 21,
      22 => 22,
      23 => 101,
      24 => 102,
      25 => 103,
    );
    $a = R::findone('records','server = ? AND project = ? AND org = ?', [$changeMobile[$server],$project,$org]);
      if($a)
      {
          if($a->record < $online_players)
          {
              $leader_record_nick = $nick_leader;
              if ($nick_leader == "–ù–µ —Å—Ç–æ–∏—Ç") { $leader_record_nick = "–ù–µ —Å—Ç–æ—è–ª"; }

              $a->record = $online_players;
              $a->leader = $leader_record_nick;
              $a->date = date("d.m.Y H:i");
              R::store($a);
              $record = $online_players;
              preg_match_all('/(.+) .+/',$a->date,$foo);
              $recordDate = preg_replace('/\./','-',$foo[1][0]);
              $recordNick = $nick_leader;
              
          } else {
            $recordNick = $a->leader;
            $record = $a->record;
            preg_match_all('/(.+) .+/',$a->date,$foo);
            $recordDate = preg_replace('/\./','-',$foo[1][0]);
          }

      } else {
          $leader_record_nick = $nick_leader;
          if ($nick_leader == "–ù–µ —Å—Ç–æ–∏—Ç") { $leader_record_nick = "–ù–µ —Å—Ç–æ—è–ª"; }
          $b = R::dispense('records');
          $b->project = $project;
          $b->server = $changeMobile[$server];
          $b->org = $org; 
          $b->record = $online_players;
          $b->leader = $leader_record_nick;
          $b->date = date("d.m.Y H:i");
          R::store($b);
          $record = $online_players;
          $recordNick = $nick_leader;
          preg_match_all('/(.+) .+/',$a->date,$foo);
          $recordDate = preg_replace('/\./','-',$foo[1][0]);
      }

      if($project == 0) {
        $whereme = $serversname[$server - 1] . ' ' . $stickers[$server - 1];
        $headers = $headers_arizona[$org - 1];
      } elseif($project == 1)
      {
        $whereme = $serversnamerodina[$server - 1];
        $headers = $headers_rodina[$org - 1];
      }
      if($alllist == 1)
      {
        return $headers . ' | ' .$whereme . "\n‚Äî –û–Ω–ª–∞–π–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: $online_players \n‚Äî –û—Ñ—Ñ–ª–∞–π–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: $offline_players\n‚Äî –í—Å–µ–≥–æ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏: $all_players\n‚Äî –†–µ–∫–æ—Ä–¥ –æ–Ω–ª–∞–π–Ω–∞: $record | $recordNick | $recordDate\n\n–õ–∏–¥–µ—Ä –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ - $nick_leader $prefix_leader\n–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–π –≤ —Å–µ—Ç–∏ $online_deputies –∏–∑ $deputies:\n$list_deputies\n";
      } else {
        
        $memo = $vk->buttonText('üìù –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–∞—é—â–∏—Ö', 'white', ['command' => 'show_members_'.$project.'_'.$server.'_'.$org]);
        $buttonslist = [[$memo]];
      
        $vk->SendButton($peer_id,$headers . ' | ' .$whereme. "\n‚Äî –û–Ω–ª–∞–π–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: $online_players\n‚Äî –û—Ñ—Ñ–ª–∞–π–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: $offline_players\n‚Äî –í—Å–µ–≥–æ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏: $all_players\n‚Äî –†–µ–∫–æ—Ä–¥ –æ–Ω–ª–∞–π–Ω–∞: $record | $recordNick | $recordDate\n\n–õ–∏–¥–µ—Ä –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ - $nick_leader $prefix_leader\n–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–π –≤ —Å–µ—Ç–∏ $online_deputies –∏–∑ $deputies:\n$list_deputies",$buttonslist, true, false, ['disable_mentions' => 1, 'dont_parse_links' => 1]);
      }
      exit;
}


function showMembers($project,$server,$org)
{
  global $vk;
  global $peer_id;
  global $serversname;
  global $serversnamerodina;
  global $stickers;
  global $headers_arizona;
  global $headers_rodina;
  
  $webapi = new WebApi();
  $data = $webapi->getMembers($project,$server,$org);
  
  if(!is_array($data))
  {
    $vk->SendMessage($peer_id,"ü§î –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!");
    exit;
  }

  $list_players = "";
  foreach($data as $key => $value)
  {
    if($value['isOnline'])
    {
      if($project) {
        $list_players .= "üåù " . $value['name'] . '[' . $value['rank'] ."]\n";
      } else {
        $list_players .= "üåù | " . $value['name'] . ' [ID: '.$value['id'].'] | ' . $value['rankLabel'] ." [".$value['rank']."]\n";
      }
      
    }
  }

  if($project == 0) {
    $whereme = $serversname[$server - 1] . ' ' . $stickers[$server - 1];
    $headers = $headers_arizona[$org - 1];
  } elseif($project == 1)
  {
    $whereme = $serversnamerodina[$server - 1];
    $headers = $headers_rodina[$org - 1];
  }

  if (strlen($list_players) <= 0) {
    $vk->SendMessage($peer_id,$headers . ' | ' .$whereme. "\n\nüìù –°–ø–∏—Å–æ–∫ –∏–≥—Ä–∞—é—â–∏—Ö –ø—É—Å—Ç.", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
    exit;
  }

  $vk->SendMessage($peer_id,$headers . ' | ' .$whereme. "\n\nüìù –°–ø–∏—Å–æ–∫ –∏–≥—Ä–∞—é—â–∏—Ö\n$list_players", ['disable_mentions' => 1, 'dont_parse_links' => 1]);
}

if($chat_act->type == 'chat_kick_user'){
  if($from_id == $member_id) {
     $vk->request('messages.removeChatUser', ['chat_id' => $chat_id, 'member_id' => $chat_act->member_id]);
   }
}